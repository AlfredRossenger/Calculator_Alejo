#BlueJ class context
comment0.target=Cola
comment0.text=\r\n\ Implementacion\ de\ clase\ para\ el\ manejo\ de\ una\ Cola\ encadenada.\ <br>\r\n\ @param\ <T>\ Tipo\ de\ datos\ a\ almacenar\ en\ la\ Cola\r\n\ @author\ Marco\ Adarme\r\n\ @version\ 2.0\r\n
comment1.params=
comment1.target=Cola()
comment1.text=\r\n\ Constructor\ de\ la\ Clase\ Cola,\ por\ defecto\ el\ primer\ y\ ultimo\ nodo\ es\ NULL\ y\ su\ tama\u00F1o\ es\ 0.\ <br>\r\n\ <b>post\:\ </b>\ Se\ construyo\ una\ Cola\ sin\ elementos.\r\n
comment10.params=
comment10.target=boolean\ esVacia()
comment10.text=\r\n\ Metodo\ que\ retorna\ si\ la\ cola\ esta\ vacia\ o\ no<br>\r\n\ <b>post\:\ </b>\ Retorna\ si\ la\ Cola\ se\ encuentra\ vacia,\ retorna\ false\ si\ hay\ elementos\ en\ la\ Cola.<br>\r\n\ @return\ un\ tipo\ boolean,\ true\ si\ es\ vacio\ y\ false\ si\ contiene\ nodos\r\n
comment11.params=
comment11.target=java.lang.String\ toString()
comment11.text=\r\n\ Convierte\ la\ pila\ a\ una\ cadena\ de\ String.\ <br>\r\n\ <b>post\:\ </b>\ Se\ retorno\ la\ representacion\ en\ String\ de\ la\ pila.\ \r\n\ El\ String\ tiene\ el\ formato\ "e1->e2->e3..->en",\ donde\ e1,\ e2,\ ...,\ en\ son\ los\ los\ elementos\ de\ la\ Pila.\ <br>\r\n\ @return\ La\ representacion\ en\ String\ de\ la\ Pila.\r\n
comment2.params=info
comment2.target=void\ enColar(java.lang.Object)
comment2.text=\r\n\ Metodo\ que\ permite\ agregar\ un\ elemento\ a\ la\ Cola.\ <br>\r\n\ <b>post\:\ </b>\ Se\ inserto\ un\ nuevo\ elemento\ a\ la\ Cola.<br>\r\n\ @param\ info\ es\ de\ tipo\ T\ y\ contiene\ la\ informacion\ a\ en\ colar\r\n
comment3.params=
comment3.target=java.lang.Object\ deColar()
comment3.text=\r\n\ Metodo\ que\ permite\ retirar\ el\ primer\ elemento\ que\ fue\ insertado\ en\ la\ Cola.\ <br>\r\n\ <b>post\:\ </b>\ Se\ elimina\ el\ primer\ elemento\ que\ fue\ insertado\ en\ la\ cola.<br>\r\n\ @return\ un\ tipo\ T\ que\ contiene\ la\ informacion\ del\ nodo\ retirado.\r\n
comment4.params=
comment4.target=void\ vaciar()
comment4.text=\r\n\ Metodo\ que\ permite\ elimar\ todos\ los\ datos\ que\ contiene\ la\ Cola.\ <br>\r\n\ <b>post\:\ </b>\ Se\ elimino\ todos\ los\ datos\ que\ se\ encontraban\ en\ la\ Cola.<br>\r\n
comment5.params=
comment5.target=NodoD\ getInicio()
comment5.text=\r\n\ Metodo\ que\ permite\ conocer\ el\ primer\ elemento\ que\ fue\ insertado\ en\ la\ Cola.\ <br>\r\n\ <b>post\:\ </b>\ Se\ obtiene\ el\ primer\ elemento\ que\ fue\ insertado\ en\ la\ Cola.<br>\r\n\ @return\ El\ primer\ elemento\ que\ fue\ insertado\ en\ la\ cola\r\n
comment6.params=
comment6.target=java.lang.Object\ getInfoInicio()
comment6.text=\r\n\ Metodo\ que\ permite\ conocer\ el\ primer\ elemento\ que\ fue\ insertado\ en\ la\ Cola.\ <br>\r\n\ <b>post\:\ </b>\ Se\ obtiene\ el\ primer\ elemento\ que\ fue\ insertado\ en\ la\ Cola.<br>\r\n\ @return\ El\ primer\ elemento\ que\ fue\ insertado\ en\ la\ cola\r\n
comment7.params=
comment7.target=void\ aumentarTamanio()
comment7.text=\r\n\ Metodo\ que\ permite\ aumentar\ el\ tama\u00F1o\ de\ la\ Cola\ para\ dar\ uso\ en\ Cola\ de\ Prioridad.\ <br>\r\n
comment8.params=ini
comment8.target=void\ setInicio(NodoD)
comment8.text=\r\n\ Metodo\ que\ permite\ modificar\ el\ Nodo\ inicial\ de\ la\ Cola\ para\ uso\ de\ la\ Cola\ de\ prioridad.\ <br>\r\n\ @param\ ini\ Representa\ el\ nuevo\ Nodo\ inicial\ de\ la\ cola.\r\n
comment9.params=
comment9.target=int\ getTamanio()
comment9.text=\r\n\ Metodo\ que\ retorna\ el\ tama\u00F1o\ de\ la\ cola<br>\r\n\ <b>post\:\ </b>\ Se\ retorno\ el\ numero\ de\ elementos\ existentes\ en\ la\ Cola.<br>\r\n\ @return\ un\ tipo\ integer\ qeu\ contiene\ el\ tama\u00F1o\ de\ la\ cola\r\n
numComments=12
