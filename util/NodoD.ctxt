#BlueJ class context
comment0.target=NodoD
comment0.text=\r\n\ Implementacion\ de\ clase\ que\ contiene\ la\ informacion\ de\ los\ nodos\ de\ una\ lista\ Doble\r\n\ @param\ <T>\ Tipo\ de\ datos\ a\ almacenar\ dentro\ del\ Nodo\ Doble.\r\n\ @author\ Marco\ Adarme\r\n\ @version\ 2.0\r\n
comment1.params=
comment1.target=NodoD()
comment1.text=\r\n\ Constructor\ de\ un\ Nodo\ Doble\ vacio.\ <br>\r\n\ <b>post\:\ </b>\ Se\ construyo\ un\ Nodo\ Doble\ vacio\ con\ la\ informacion\ en\ NULL.\r\n
comment2.params=info\ sig\ ant
comment2.target=NodoD(java.lang.Object,\ NodoD,\ NodoD)
comment2.text=\r\n\ Constructor\ con\ parametros\ de\ la\ clase\ NodoD\ <br>\r\n\ <b>post\:\ </b>\ Se\ construyo\ un\ nodo\ doble\ con\ los\ datos\ especificados.<br>\r\n\ @param\ info\ de\ tipo\ T\ y\ contiene\ la\ informacion\ del\ nodo\r\n\ @param\ sig\ es\ del\ tipo\ NodoD<T>\ y\ contiene\ la\ direccion\ del\ Nodo\ siguiente\r\n\ @param\ ant\ es\ de\ tipo\ NodoD<T>\ y\ contiene\ la\ direccion\ del\ Nodo\ anterior\r\n
comment3.params=
comment3.target=java.lang.Object\ getInfo()
comment3.text=\r\n\ Metodo\ que\ permite\ obtener\ el\ contenido\ del\ Nodo\ doble<br>\r\n\ <b>post\:\ </b>\ Se\ retorno\ la\ informacion\ del\ Nodo\ doble.<br>\r\n\ @return\ un\ tipo\ T\ que\ contiene\ la\ informacion\ del\ Nodo\ doble\r\n
comment4.params=
comment4.target=NodoD\ getAnt()
comment4.text=\r\n\ Metodo\ que\ permite\ obtener\ la\ direcci\u00F3n\ del\ Nodo\ anterior\ al\ actual<br>\r\n\ <b>post\:\ </b>\ Se\ retorno\ la\ informacion\ del\ Nodo\ anterior\ al\ actual.<br>\r\n\ @return\ un\ Nodo<T>\ que\ contiene\ \r\n
comment5.params=
comment5.target=NodoD\ getSig()
comment5.text=\r\n\ Metodo\ que\ permite\ devolver\ el\ nodo\ siguiente\ al\ que\ apunta\ el\ Nodo\ doble<br>\r\n\ <b>post\:\ </b>\ Se\ retorno\ la\ informacion\ del\ Nodo\ siguiente\ al\ actual.<br>\r\n\ @return\ un\ tipo\ NodoD<T>\ que\ contiene\ el\ nodo\ siguiente\r\n
comment6.params=info
comment6.target=void\ setInfo(java.lang.Object)
comment6.text=\r\n\ Metodo\ que\ permite\ cambiar\ la\ informacion\ contenida\ en\ el\ Nodo\ doble<br>\r\n\ <b>post\:\ </b>\ Se\ edito\ la\ informacion\ del\ Nodo\ Doble.\ <br>\r\n\ @param\ info\ es\ de\ tipo\ T\ y\ contiene\ la\ informacion\ nueva\ del\ nodo\ dooble\r\n
comment7.params=ant
comment7.target=void\ setAnt(NodoD)
comment7.text=\r\n\ Metodo\ que\ permite\ editar\ la\ direcci\u00F3n\ del\ nodo\ anterior\ por\ una\ nueva<br>\r\n\ <b>post\:\ </b>\ Se\ edito\ la\ informacion\ del\ Nodo\ anterior\ del\ nodo\ actual.\ <br>\r\n\ @param\ ant\ es\ de\ tipo\ NodoD<T>\ y\ contiene\ la\ nueva\ direcci\u00F3n\ del\ nodo\ anterior\r\n
comment8.params=sig
comment8.target=void\ setSig(NodoD)
comment8.text=\r\n\ Metodo\ que\ permite\ cambiar\ el\ nodo\ siguiente\ del\ Nodo\ doble\ actual<br>\r\n\ <b>post\:\ </b>\ Se\ edito\ la\ informacion\ del\ Nodo\ siguiente\ del\ nodo\ actual.\ <br>\r\n\ @param\ sig\ es\ de\ tipo\ NodoD<T>\ y\ contien\ la\ informacion\ del\ nuevo\ nodo\ siguiente\r\n
numComments=9
